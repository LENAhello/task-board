// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
  @@map("accounts")
}
// A user who owns boards
model User {
  id            String  @id @default(cuid()) // Unique ID (random string)
  name          String?
  email         String          @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
 
  boards    Board[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("users")
}

// A board (like "Project Alpha")
model Board {
  id        String   @id @default(cuid())
  title     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  lists     List[]
  createdAt DateTime @default(now())
}

// A list (like "Todo", "Doing", "Done")
model List {
  id        String   @id @default(cuid())
  title     String
  order     Int
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   String
  tasks     Task[]
  createdAt DateTime @default(now())
}

// A task (like "Buy milk")
model Task {
  id        String   @id @default(cuid())
  title     String
  order     Int
  list      List     @relation(fields: [listId], references: [id])
  listId    String
  createdAt DateTime @default(now())
}
